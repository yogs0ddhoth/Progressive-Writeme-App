const { precacheAndRoute } = require('workbox-precaching/precacheAndRoute');
const { CacheFirst } = require('workbox-strategies');
const { CacheableResponsePlugin } = require('workbox-cacheable-response');
const { ExpirationPlugin } = require('workbox-expiration');
const { offlineFallback,
        warmStrategyCache 
      } = require('workbox-recipes');
const { registerRoute } = require('workbox-routing');

// precache the files in the manifest generated by webpack-pwa-manifest
// & add fetch listener for prechached files, and serve the precached assets
precacheAndRoute(self.__WB_MANIFEST);

const pageCache = new CacheFirst( // configure cache-first strategy 
  { 
    cacheName: 'page-cache',
    plugins: [
      new CacheableResponsePlugin( // cache all responses with '0' and '200' statuses
        { statuses: [0, 200] }
      ),
      new ExpirationPlugin( // cache expires after 30 days
        { maxAgeSeconds: 60 * 60 * 24 * 30 }
      ),
    ],
  }
);

warmStrategyCache( // warm the cache with html pages on service worker install
  { urls: ['index.html', '/'], strategy: pageCache }
);
// add fetch listener to html navigation and asset requests, and implement runtime cache-first strategy
registerRoute( ({ request }) => request.mode === 'navigate' || ['style', 'script', 'worker'].includes(request.destination), pageCache );